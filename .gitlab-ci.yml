cache:
  key: $CI_COMMIT_REF_SLUG
  paths:
    - open-tacos/node_modules/
    - open-tacos/.cache
    - public

image: registry.gitlab.com/openbeta/openbeta-nodejs-docker:16.3

variables:
  GIT_DEPTH: 1
  DOCKER_DRIVER: overlay2
  DOCKER_TLS_CERTDIR: ""
  DOCKER_HOST: tcp://docker:2375
  IMAGE_LATEST:  $CI_REGISTRY_IMAGE:latest 

# Job name must be 'pages' in order for GitLab to deploy build to static site
gatsby-build:
  only: # Only run for these branches
  - develop
  - main
  - gitlab-debug

  stage: build

  tags:
  - docker

  before_script:
  - mkdir -p open-tacos 
  - mv content open-tacos
  # we need to move build output dir back down 1 level for GitLab pages to work
  - '[ -d public ] && mv public open-tacos'
  - cd open-tacos && ls -la
  - git init .  && git remote add origin https://github.com/OpenBeta/open-tacos
  - git pull --depth $GIT_DEPTH origin develop
  - git checkout develop
  - git show --summary
  # Record SHA of code
  - echo "CODE_SHA=$(git rev-parse --short HEAD)" >> ../build.env
  - if [ "$FORCE_CLEAN" == "true" ]; then rm -rf node_modules; fi;
  - yarn install --no-progress
  - if [ "$FORCE_CLEAN" == "true" ]; then ./node_modules/.bin/gatsby clean; fi;

  script:
  - ./node_modules/.bin/gatsby build
  - mv public $CI_PROJECT_DIR

  artifacts:
    reports:
      dotenv: build.env

docker-build:
  only: # Only run for these branches
  - develop
  - main
  - gitlab-debug

  stage: build

  tags:
    - docker

  needs: 
     - job: gatsby-build
       artifacts: true

  image: docker:20.10.10

  services:
     - docker:20.10.10-dind
  
  variables:
    # Form image tag with most recent code SHA and content SHA
    IMAGE_CURRENT: $CI_REGISTRY_IMAGE:${CODE_SHA}-$CI_COMMIT_SHORT_SHA

  before_script:
  - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  - echo "IMAGE_CURRENT=$IMAGE_CURRENT" >> build.env
  - echo "CODE_SHA=$CODE_SHA" >> build.env


  script:
  - docker pull $IMAGE_LATEST || true
  - docker build --cache-from $IMAGE_LATEST --tag $IMAGE_CURRENT --tag $IMAGE_LATEST .
  - docker push $IMAGE_CURRENT
  - docker push $IMAGE_LATEST

  artifacts:
    reports:
      dotenv: build.env

deploy:

  stage: deploy

  tags:
    - docker

  needs: 
  - job: docker-build
    artifacts: true

  image:
    name: bitnami/git:latest

  before_script:
  - mkdir -p ~/.bin
  - curl -s "https://raw.githubusercontent.com/kubernetes-sigs/kustomize/master/hack/install_kustomize.sh"  | bash -s -- ~/.bin
  - 'which ssh-agent || ( apt-get update -y && apt-get install openssh-client -y )'
  - eval $(ssh-agent -s)
  - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add - > /dev/null
  - mkdir -p ~/.ssh
  - ssh-keyscan gitlab.com >> ~/.ssh/known_hosts
  - chmod 644 ~/.ssh/known_hosts

  script:
  - git clone git@gitlab.com:openbeta/devops/opentacos-k8s.git
  - cd opentacos-k8s
  - ~/.bin/kustomize edit set image $IMAGE_CURRENT
  - git diff
  - if [[ ! -n $(git status --porcelain) ]]; then echo "No new changes. Skipping deployment.";  exit 0; fi
  - git config --global user.name $GITLAB_USER_NAME
  - git config --global user.email $GITLAB_USER_EMAIL
  - git commit -am "Update deployment. Code=${CODE_SHA}, Content=${CI_COMMIT_SHORT_SHA}"
  - git push
